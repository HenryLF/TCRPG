/* * {
  border: 1px solid red;
} */
#field-pannel {
  height: 80vh;
  width: 100%;
  display: flex;
}
.field {
  background-color: green;
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: repeat(10, 1fr);
  grid-column-gap: 0px;
  grid-row-gap: 0px;
  width: 75%;
}
#monsters {
  grid-area: 1 / 1 / 4 / 13;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}
#blocker-1 {
  grid-area: 5 / 3 / 7 / 5;
}
#blocker-0 {
  grid-area: 5 / 6 / 7 / 8;
}
#blocker-2 {
  grid-area: 5 / 9 / 7 / 11;
}
#blocker-3 {
  grid-area: 8 / 1 / 10 / 3;
}
#blocker-4 {
  grid-area: 8 / 11 / 10 / 13;
}
.unit_container {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
}
#hero_container {
  grid-area: 8 / 5 / 11 / 9;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
}

#pannel {
  width: 25%;
  height: 100%;
  background-color: yellow;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
}
#deckcontainer {
  width: 100%;
  height: 50%;
  display: flex;
  justify-content: space-around;
}
#deckcontainer div {
  width: 40%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  color: antiquewhite;
  font-size: 200%;
  text-align: center;
}
#deck {
  background-color: maroon;
}
#discard {
  background-color: rgb(40, 153, 159);
}

#btns {
  display: flex;
  height: 20%;
}
.btn {
  width: 50%;
}
.btn:hover {
  animation-name: effectMove;
  animation-iteration-count: infinite;
  animation-duration: 1s;
}

#hand {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  height: 20vh;
}

.unit {
  height: 100%;
  width: 25%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  transition-property: transform;
  transition-duration: 0.5s;
}
.unit:hover {
  transform: scale(1.2);
}
.unit img {
  height: 70%;
}

.unit.damaged {
  animation: DamageAnimation;
  animation-duration: 0.25s;
  animation-iteration-count: 4;
  transform: scale(0.9);
}
@keyframes DamageAnimation {
  0% {
    translate: 5%;
  }
  50% {
    translate: -5%;
  }
  75% {
    translate: -5%;
  }
}

.monster.attack {
  animation-name: monsterAttack;
  animation-duration: 2s;
  animation-iteration-count: infinite;
}
@keyframes monsterAttack {
  from {
    translate: 0% 0%;
    filter: none;
    transform: scale(1);
  }
  50% {
    transform: scale(1.2);
    translate: 0% 10%;
    filter: sepia(1) hue-rotate(-16deg);
  }
  to {
    translate: 0% 0%;
    filter: none;
    transform: scale(1);
  }
}
.hero.attack {
  animation-name: heroAttack;
  animation-duration: 2s;
  animation-iteration-count: infinite;
}
@keyframes heroAttack {
  from {
    translate: 0% 0%;
    filter: none;
    transform: scale(1);
  }
  50% {
    transform: scale(1.5);
    translate: 0% -20%;
  }
  to {
    translate: 0% 0%;
    filter: none;
    transform: scale(1);
  }
}

.waiting:hover {
  animation-name: blockerWaiting;
  animation-duration: 4s;
  animation-iteration-count: infinite;
}
@keyframes blockerWaiting {
  25% {
    translate: 5%;
  }
  75% {
    translate: -5%;
  }
  to {
    translate: 0%;
  }
}
.card {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 18%;
  transition-property: transform, translate;
  transition-duration: 0.5s;
}

.card:hover {
  transform: scale(1.2);
  translate: 0% -10%;
}

.card.discard {
  animation-name: DiscardCard;
  animation-duration: 1s;
  animation-iteration-count: 1;
}
@keyframes DiscardCard {
  from {
    opacity: 1;
  }
  to {
    translate: 0% -200%;
    opacity: 0;
  }
}

.spell {
  background-color: aqua;
}
.blocker.card {
  background-color: brown;
}
.ritual {
  background-color: purple;
}
.card img {
  height: 80%;
}

p {
  margin: 0;
}
.stat,
.effect-div {
  height: 10%;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 100%;
}

.name {
  height: 20%;
  font-size: 100%;
  font-weight: bold;
}
.icons.effect {
  pointer-events: none;
  height: 100%;
}

.stat .icons {
  pointer-events: none;
  height: 100%;
}

.effect {
  animation: effectMove;
  animation-duration: 1s;
  animation-iteration-count: infinite;
}
@keyframes effectMove {
  25% {
    translate: 0% 5%;
  }
  75% {
    translate: 0% -5%;
  }
  to {
    translate: 0% 0%;
  }
}
